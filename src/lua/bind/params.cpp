#include <sol/sol.hpp>
#include "lua/bind.hpp"

namespace Lua {
    int bind_params(sol::state_view &lua, sol::metatable& readonly_metatable) {
        auto common_parameters = lua.new_usertype<ComParameters_t::Values>("ComParameters_t");

        common_parameters.set("MaxNetworkRejects",
            sol::readonly(&ComParameters_t::Values::MaxNetworkRejects)
        );
        common_parameters.set("InterSessionULTimeout",
            sol::readonly(&ComParameters_t::Values::InterSessionULTimeout)
        );
        common_parameters.set("AbnormalTimeout",
            sol::readonly(&ComParameters_t::Values::AbnormalTimeout)
        );
        common_parameters.set("CS_alive",
            sol::readonly(&ComParameters_t::Values::CS_alive)
        );
        common_parameters.set("UseAbnormalTimeout",
            sol::readonly(&ComParameters_t::Values::UseAbnormalTimeout)
        );
        common_parameters.set("ProfileTime4Country",
            sol::readonly(&ComParameters_t::Values::ProfileTime4Country)
        );
        common_parameters.set("ProfileTime4CountryActive",
            sol::readonly(&ComParameters_t::Values::ProfileTime4CountryActive)
        );
        common_parameters.set("CounterTime4Country",
            sol::readonly(&ComParameters_t::Values::CounterTime4Country)
        );
        common_parameters.set("IDR_alive",
            sol::readonly(&ComParameters_t::Values::IDR_alive)
        );
        common_parameters.set("MaxRedirectionTimePerSession",
            sol::readonly(&ComParameters_t::Values::MaxRedirectionTimePerSession)
        );
        common_parameters.set("MaxULRejectsPerSeries4OneNode",
            sol::readonly(&ComParameters_t::Values::MaxULRejectsPerSeries4OneNode)
        );
        common_parameters.set("MaxULRejectsPerSeries4OneNodeLTE",
            sol::readonly(&ComParameters_t::Values::MaxULRejectsPerSeries4OneNodeLTE)
        );
        common_parameters.set("PS_alive",
            sol::readonly(&ComParameters_t::Values::PS_alive)
        );
        common_parameters.set("LTE_alive",
            sol::readonly(&ComParameters_t::Values::LTE_alive)
        );
        common_parameters.set("ManualModeTimeout",
            sol::readonly(&ComParameters_t::Values::ManualModeTimeout)
        );
        common_parameters.set("TimeoutBetweenRedirectionSession",
            sol::readonly(&ComParameters_t::Values::TimeoutBetweenRedirectionSession)
        );
        common_parameters.set("AutoModeSpecialPeriod",
            sol::readonly(&ComParameters_t::Values::AutoModeSpecialPeriod)
        );
        common_parameters.set("AutoModeSpecialPeriodLTE",
            sol::readonly(&ComParameters_t::Values::AutoModeSpecialPeriodLTE)
        );
        common_parameters.set("BonVoyageDefaultLang",
            sol::readonly(&ComParameters_t::Values::BonVoyageDefaultLang)
        );
        common_parameters.set("WelcomeSMSDefaultLang",
            sol::readonly(&ComParameters_t::Values::WelcomeSMSDefaultLang)
        );
        common_parameters.set("MaxSessionTimeouts",
            sol::readonly(&ComParameters_t::Values::MaxSessionTimeouts)
        );
        common_parameters.set("BonVoyageEvents",
            sol::readonly(&ComParameters_t::Values::BonVoyageEvents)
        );
        common_parameters.set("WelcomeSMSEvents",
            sol::readonly(&ComParameters_t::Values::WelcomeSMSEvents)
        );
        common_parameters.set("BonVoyageMissTimeout",
            sol::readonly(&ComParameters_t::Values::BonVoyageMissTimeout)
        );
        common_parameters.set("SENDER_EMAIL",
            sol::readonly(&ComParameters_t::Values::SENDER_EMAIL)
        );
        common_parameters.set("SCA_enable",
            sol::readonly(&ComParameters_t::Values::SCA_enable)
        );
        common_parameters.set("SC_enable",
            sol::readonly(&ComParameters_t::Values::SC_enable)
        );
        common_parameters.set("SoR_enable",
            sol::readonly(&ComParameters_t::Values::SoR_enable)
        );
        common_parameters.set("K3_mode",
            sol::readonly(&ComParameters_t::Values::K3_mode)
        );
        common_parameters.set("T1_mode",
            sol::readonly(&ComParameters_t::Values::T1_mode)
        );
        common_parameters.set("Counter_mode",
            sol::readonly(&ComParameters_t::Values::Counter_mode)
        );
        common_parameters.set("HPMN_MCC_MNC",
            sol::readonly(&ComParameters_t::Values::HPMN_MCC_MNC)
        );
        return ok;
    }
}